# AUTOGENERATED FROM build-test-core-x86.jsonnet DO NOT MODIFY
name: build-test-core-x86
"on":
  workflow_dispatch:
  workflow_call:
jobs:
  test_win:
    runs-on: windows-latest
    steps:
    - run: git config --system core.longpaths true
    - name: Make checkout speedy
      run: git config --global fetch.parallel 50
    - uses: actions/checkout@v3
      with:
        submodules: true
        path: checkout
    - uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: "4.14"
        opam-pin: false
        opam-repositories: |
          opam-repository-mingw: https://github.com/tpetr/opam-repository-mingw.git#sunset
          default: https://github.com/ocaml/opam-repository.git
    - shell: bash
      run: |
        export PATH="/cygdrive/d/a/semgrep/semgrep/_opam/bin:${CYGWIN_ROOT_BIN}:${PATH}"
        opam search -V notty
        opam list
        opam install --dry-run --debug notty.0.2.3
        opam list
    - id: build-tree-sitter
      shell: bash
      run: |
        export CC=x86_64-w64-mingw32-gcc
        cd checkout/libs/ocaml-tree-sitter-core
        ./configure
        ./scripts/download-tree-sitter --lazy
        prefix="$(pwd)/tree-sitter"
        cd downloads/tree-sitter
        make PREFIX="$prefix" CFLAGS="-O3 -Wall -Wextra"
        make PREFIX="$prefix" install
    - id: install-depexts
      run: opam depext conf-pkg-config conf-gmp conf-libpcre
    - id: install-deps
      run: opam install -y ./checkout/ ./checkout/libs/ocaml-tree-sitter-core --deps-only
    - id: build-semgrep
      shell: bash
      run: |
        export PATH="${CYGWIN_ROOT_BIN}:${PATH}"
        cd checkout
        export TREESITTER_INCDIR=$(pwd)/libs/ocaml-tree-sitter-core/tree-sitter/include
        export TREESITTER_LIBDIR=$(pwd)/libs/ocaml-tree-sitter-core/tree-sitter/lib
        for filename in $(find ./languages/ -name dune); do
          grep -v rpath $filename > $filename.new
          mv $filename.new $filename
        done
        for filename in $(find ./libs/ocaml-tree-sitter-core/ -name dune); do
          grep -v rpath $filename > $filename.new
          mv $filename.new $filename
        done
        opam exec -- dune build src/main
        echo 'print("foo")' > test.py
        _build/default/src/main/Main.exe -e 'print($X)' -lang python -json test.py
        tar czvf osemgrep.tar.gz _build/default/src/main/Main.exe \
          d:/cygwin/usr/x86_64-w64-mingw32/sys-root/mingw/bin/libstdc++-6.dll \
          d:/cygwin/usr/x86_64-w64-mingw32/sys-root/mingw/bin/libgcc_s_seh-1.dll \
          d:/cygwin/usr/x86_64-w64-mingw32/sys-root/mingw/bin/libwinpthread-1.dll \
          d:/cygwin/usr/x86_64-w64-mingw32/sys-root/mingw/bin/libpcre-1.dll \
          d:/cygwin/usr/x86_64-w64-mingw32/sys-root/mingw/bin/libgmp-10.dll
    - uses: actions/upload-artifact@v3
      with:
        path: checkout/osemgrep.tar.gz
        name: windows-artifacts
