name: build-test-docker

on:
  workflow_dispatch:
    inputs:
      docker-tags:
        required: true
        type: string
        description: A multi-line string in the format accepted by docker metadata tag action for the tags to apply to the image
      artifact-name:
        required: true
        type: string
        description: Name (key) to use when uploading the docker image tarball as a artifact
      repository-name:
        required: true
        type: string
        description: The repository/name of the docker image to push, e.g., returntocorp/semgrep
        default: returntocorp/semgrep
      file:
        required: true
        type: string
        description: Dockerfile to build
        default: Dockerfile
      enable-tests:
        required: true
        type: boolean
        description: Whether or not to run validation on the built image

  workflow_call:
    inputs:
      docker-tags:
        required: true
        type: string
        description: A multi-line string in the format accepted by docker metadata tag action for the tags to apply to the image
      artifact-name:
        required: true
        type: string
        description: Name (key) to use when uploading the docker image tarball as a artifact
      repository-name:
        required: true
        type: string
        description: The repository/name of the docker image to push, e.g., returntocorp/semgrep
      file:
        required: true
        type: string
        description: Dockerfile to build
      enable-tests:
        required: true
        type: boolean
        description: Whether or not to run validation on the built image

jobs:
  build-test-docker:
    name: Build and test Semgrep Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Make checkout speedy
        run: git config --global fetch.parallel 50
      - uses: actions/checkout@v3
        with:
          submodules: true
      - id: meta
        name: Set tags and labels
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.repository-name }}
          # :latest is also added automatically
          tags: ${{ inputs.docker-tags }}
      - uses: depot/setup-action@v1
      - uses: depot/build-push-action@v1
        with:
          project: fhmxj6w9z8
          context: .
          platforms: linux/amd64,linux/arm64
          outputs: type=docker,dest=/tmp/image.tar
          cache-from: type=gha,src=/tmp/.buildx-cache
          cache-to: type=gha,dest=/tmp/.buildx-cache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ inputs.file }}
          provenance: false
      - name: Load image
        run: |
          curl -L -o /tmp/regctl "https://github.com/regclient/regclient/releases/download/v0.4.8/regctl-linux-amd64"
          chmod a+x /tmp/regctl
          /tmp/regctl image import ocidir:///tmp/oci-image /tmp/image.tar
          /tmp/regctl image export --name ${{ inputs.repository-name }}:latest -p linux/amd64 ocidir:///tmp/oci-image /tmp/image-amd64.tar
          docker load < /tmp/image-amd64.tar
          rm -rf /tmp/oci-image
      - name: Test Image
        if: ${{ inputs.enable-tests }}
        run: ./scripts/validate-docker-build.sh ${{ steps.build-image.outputs.imageid }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: /tmp/image.tar
