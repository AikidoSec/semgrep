=== command
CI="true" GITHUB_ACTIONS="true" GITHUB_EVENT_NAME="pull_request" GITHUB_REPOSITORY="project_name/project_name" GITHUB_RUN_ID="35" GITHUB_ACTOR="some_test_username" GITHUB_REF="some/branch-name" GITHUB_EVENT_PATH="<MASKED>" SEMGREP_APP_TOKEN="fake-key-from-tests" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --debug --no-force-color
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain

=== end of stdout - plain

=== stderr - plain
Scan environment:
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment github-actions, triggering event is pull_request
  semgrep.dev - authenticated as org_name

head branch (bar) has latest commit 17b3114fb3d41437abc2a3e6499db84ad921e6f0, fetching that commit now.
Trying to shallow fetch branch foo from origin
base branch (foo) has latest commit f7ee3123ed098941662685dd8b726fceee48f78d
Fixing git state for github action pull request
Calling git rev-parse HEAD
stashed_rev: 17b3114fb3d41437abc2a3e6499db84ad921e6f0
Not on head ref: 17b3114fb3d41437abc2a3e6499db84ad921e6f0; checking that out now.
Attempting to find merge base, attempt_count=0, fetch_depth=0
Attempting to find merge base, attempt_count=1, fetch_depth=4
Trying to fetch branch foo from origin as base branch
Trying to fetch branch bar as commit from origin as head branch tip commit
Using f7ee3123ed098941662685dd8b726fceee48f78d as the merge-base of f7ee3123ed098941662685dd8b726fceee48f78d and 17b3114fb3d41437abc2a3e6499db84ad921e6f0
Fetching configuration from semgrep.dev
Starting scan
Using https://semgrep.dev<MASKED>
Adding ignore patterns configured on semgrep.dev as `--exclude` options: ()
semgrep version <MASKED>
Fetching rules from https://semgrep.dev<MASKED>
trying to download from https://semgrep.dev<MASKED>
finished downloading from https://semgrep.dev<MASKED>
loaded 1 configs in<MASKED>
running 4 rules from 1 config remote-url_0
Initializing git status
Running git diff
Finished git diff. Parsing git status output
['A', 'bar.py']
Git status:
added: [PosixPath('bar.py')]
modified: []
removed: []
unmerged: []
Initializing dirty paths
Git status output: 
finished getting dirty paths
{}
No .semgrepignore found. Using default .semgrepignore rules. See the docs for the list of default ignores: https://semgrep.dev<MASKED>
Rules:
- __r2c-internal-cai_eqeq
- eqeq-bad
- eqeq-five
- eqeq-four
Passing whole rules directly to semgrep_core
Scanning 1 file with 4 python rules.
Running semgrep-core with command:
/<MASKED>/semgrep-core -json -rules <MASKED>-json_time -fast --debug
--- semgrep-core stderr ---
<MASKED>
<MASKED>
<MASKED>
{
  "rules": [
    {
      "id": "eqeq-bad",
      "languages": [
        "python"
      ],
      "message": "useless comparison",
      "pattern": "$X == $X",
      "severity": "ERROR"
    },
    {
      "fix": "$X == 2",
      "id": "eqeq-five",
      "languages": [
        "python"
      ],
      "message": "useless comparison to 5",
      "metadata": {
        "dev.semgrep.actions": []
      },
      "pattern": "$X == 5",
      "severity": "ERROR"
    },
    {
      "id": "eqeq-four",
      "languages": [
        "python"
      ],
      "message": "useless comparison to 4",
      "metadata": {
        "dev.semgrep.actions": [
          "block"
        ]
      },
      "pattern": "$X == 4",
      "severity": "ERROR"
    },
    {
      "id": "__r2c-internal-cai_eqeq",
      "languages": [
        "python"
      ],
      "message": "useless comparison to 3",
      "pattern": "$X == 3",
      "severity": "INFO"
    }
  ]
}
[]
<MASKED>
Raised by primitive operation at Stdlib.open_out_gen in file "stdlib.ml", line 331, characters 29-55
Called from Stdlib.open_out_bin in file "stdlib.ml" (inlined), line 339, characters 2-76
Called from Common.write_file in file "src/pfff/commons/Common.ml", line 1271, characters 13-30
Called from Parse_rule.parse_templated_rules in file "src/parsing/Parse_rule.ml", line 1290, characters 2-50
Called from Parse_rule.parse_possibly_templated_rules in file "src/parsing/Parse_rule.ml", line 1350, characters 4-54
Called from Common.with_time in file "src/pfff/commons/Common.ml", line 215, characters 12-16
Called from Run_semgrep.semgrep_with_raw_results_and_exn_handler in file "src/runner/Run_semgrep.ml", line 665, characters 6-97

<MASKED>
[0.030  Info       Main.Runner_exit     ] exit 2: unknown exception (Sys_error "/rules.jsonnet: Permission denied")
Raised by primitive operation at Stdlib.open_out_gen in file "stdlib.ml", line 331, characters 29-55
Called from Stdlib.open_out_bin in file "stdlib.ml" (inlined), line 339, characters 2-76
Called from Common.write_file in file "src/pfff/commons/Common.ml", line 1271, characters 13-30
Called from Parse_rule.parse_templated_rules in file "src/parsing/Parse_rule.ml", line 1290, characters 2-50
Called from Parse_rule.parse_possibly_templated_rules in file "src/parsing/Parse_rule.ml", line 1350, characters 4-54
Called from Common.with_time in file "src/pfff/commons/Common.ml", line 215, characters 12-16
Called from Run_semgrep.semgrep_with_raw_results_and_exn_handler in file "src/runner/Run_semgrep.ml", line 665, characters 6-97

--- end semgrep-core stderr ---
Returning to original head revision 17b3114fb3d41437abc2a3e6499db84ad921e6f0
[ERROR] Fatal error at line :1:
 (Sys_error "/rules.jsonnet: Permission denied")
====[ BEGIN error trace ]====
(Sys_error "/rules.jsonnet: Permission denied")
Raised by primitive operation at Stdlib.open_out_gen in file "stdlib.ml", line 331, characters 29-55
Called from Stdlib.open_out_bin in file "stdlib.ml" (inlined), line 339, characters 2-76
Called from Common.write_file in file "src/pfff/commons/Common.ml", line 1271, characters 13-30
Called from Parse_rule.parse_templated_rules in file "src/parsing/Parse_rule.ml", line 1290, characters 2-50
Called from Parse_rule.parse_possibly_templated_rules in file "src/parsing/Parse_rule.ml", line 1350, characters 4-54
Called from Common.with_time in file "src/pfff/commons/Common.ml", line 215, characters 12-16
Called from Run_semgrep.semgrep_with_raw_results_and_exn_handler in file "src/runner/Run_semgrep.ml", line 665, characters 6-97
=====[ END error trace ]=====

Not sending pseudonymous metrics since metrics are configured to OFF and registry usage is True

=== end of stderr - plain

=== stdout - color

=== end of stdout - color

=== stderr - color
Scan environment:
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment github-actions, triggering event is pull_request
  semgrep.dev - authenticated as org_name

head branch (bar) has latest commit 17b3114fb3d41437abc2a3e6499db84ad921e6f0, fetching that commit now.
Trying to shallow fetch branch foo from origin
base branch (foo) has latest commit f7ee3123ed098941662685dd8b726fceee48f78d
Fixing git state for github action pull request
Calling git rev-parse HEAD
stashed_rev: 17b3114fb3d41437abc2a3e6499db84ad921e6f0
Not on head ref: 17b3114fb3d41437abc2a3e6499db84ad921e6f0; checking that out now.
Attempting to find merge base, attempt_count=0, fetch_depth=0
Attempting to find merge base, attempt_count=1, fetch_depth=4
Trying to fetch branch foo from origin as base branch
Trying to fetch branch bar as commit from origin as head branch tip commit
Using f7ee3123ed098941662685dd8b726fceee48f78d as the merge-base of f7ee3123ed098941662685dd8b726fceee48f78d and 17b3114fb3d41437abc2a3e6499db84ad921e6f0
Fetching configuration from semgrep.dev
Starting scan
Using https://semgrep.dev<MASKED>
Adding ignore patterns configured on semgrep.dev as `--exclude` options: ()
semgrep version <MASKED>
Fetching rules from https://semgrep.dev<MASKED>
trying to download from https://semgrep.dev<MASKED>
finished downloading from https://semgrep.dev<MASKED>
loaded 1 configs in<MASKED>
running 4 rules from 1 config remote-url_0
Initializing git status
Running git diff
Finished git diff. Parsing git status output
['A', 'bar.py']
Git status:
added: [PosixPath('bar.py')]
modified: []
removed: []
unmerged: []
Initializing dirty paths
Git status output: 
finished getting dirty paths
{}
No .semgrepignore found. Using default .semgrepignore rules. See the docs for the list of default ignores: https://semgrep.dev<MASKED>
Rules:
- __r2c-internal-cai_eqeq
- eqeq-bad
- eqeq-five
- eqeq-four
Passing whole rules directly to semgrep_core
Scanning 1 file with 4 python rules.
Running semgrep-core with command:
/<MASKED>/semgrep-core -json -rules <MASKED>-json_time -fast --debug
--- semgrep-core stderr ---
<MASKED>
<MASKED>
<MASKED>
{
  "rules": [
    {
      "id": "eqeq-bad",
      "languages": [
        "python"
      ],
      "message": "useless comparison",
      "pattern": "$X == $X",
      "severity": "ERROR"
    },
    {
      "fix": "$X == 2",
      "id": "eqeq-five",
      "languages": [
        "python"
      ],
      "message": "useless comparison to 5",
      "metadata": {
        "dev.semgrep.actions": []
      },
      "pattern": "$X == 5",
      "severity": "ERROR"
    },
    {
      "id": "eqeq-four",
      "languages": [
        "python"
      ],
      "message": "useless comparison to 4",
      "metadata": {
        "dev.semgrep.actions": [
          "block"
        ]
      },
      "pattern": "$X == 4",
      "severity": "ERROR"
    },
    {
      "id": "__r2c-internal-cai_eqeq",
      "languages": [
        "python"
      ],
      "message": "useless comparison to 3",
      "pattern": "$X == 3",
      "severity": "INFO"
    }
  ]
}
[]
<MASKED>
Raised by primitive operation at Stdlib.open_out_gen in file "stdlib.ml", line 331, characters 29-55
Called from Stdlib.open_out_bin in file "stdlib.ml" (inlined), line 339, characters 2-76
Called from Common.write_file in file "src/pfff/commons/Common.ml", line 1271, characters 13-30
Called from Parse_rule.parse_templated_rules in file "src/parsing/Parse_rule.ml", line 1290, characters 2-50
Called from Parse_rule.parse_possibly_templated_rules in file "src/parsing/Parse_rule.ml", line 1350, characters 4-54
Called from Common.with_time in file "src/pfff/commons/Common.ml", line 215, characters 12-16
Called from Run_semgrep.semgrep_with_raw_results_and_exn_handler in file "src/runner/Run_semgrep.ml", line 665, characters 6-97

<MASKED>
[0.030  [94mInfo[39m       [4mMain.Runner_exit[24m     ] exit 2: unknown exception (Sys_error "/rules.jsonnet: Permission denied")
Raised by primitive operation at Stdlib.open_out_gen in file "stdlib.ml", line 331, characters 29-55
Called from Stdlib.open_out_bin in file "stdlib.ml" (inlined), line 339, characters 2-76
Called from Common.write_file in file "src/pfff/commons/Common.ml", line 1271, characters 13-30
Called from Parse_rule.parse_templated_rules in file "src/parsing/Parse_rule.ml", line 1290, characters 2-50
Called from Parse_rule.parse_possibly_templated_rules in file "src/parsing/Parse_rule.ml", line 1350, characters 4-54
Called from Common.with_time in file "src/pfff/commons/Common.ml", line 215, characters 12-16
Called from Run_semgrep.semgrep_with_raw_results_and_exn_handler in file "src/runner/Run_semgrep.ml", line 665, characters 6-97

--- end semgrep-core stderr ---
Returning to original head revision 17b3114fb3d41437abc2a3e6499db84ad921e6f0
[ERROR] Fatal error at line :1:
 (Sys_error "/rules.jsonnet: Permission denied")
====[ BEGIN error trace ]====
(Sys_error "/rules.jsonnet: Permission denied")
Raised by primitive operation at Stdlib.open_out_gen in file "stdlib.ml", line 331, characters 29-55
Called from Stdlib.open_out_bin in file "stdlib.ml" (inlined), line 339, characters 2-76
Called from Common.write_file in file "src/pfff/commons/Common.ml", line 1271, characters 13-30
Called from Parse_rule.parse_templated_rules in file "src/parsing/Parse_rule.ml", line 1290, characters 2-50
Called from Parse_rule.parse_possibly_templated_rules in file "src/parsing/Parse_rule.ml", line 1350, characters 4-54
Called from Common.with_time in file "src/pfff/commons/Common.ml", line 215, characters 12-16
Called from Run_semgrep.semgrep_with_raw_results_and_exn_handler in file "src/runner/Run_semgrep.ml", line 665, characters 6-97
=====[ END error trace ]=====

Not sending pseudonymous metrics since metrics are configured to OFF and registry usage is True

=== end of stderr - color