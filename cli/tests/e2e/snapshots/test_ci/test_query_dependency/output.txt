=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain


┌──────────────────────────┐
│ 4 Blocking Code Findings │
└──────────────────────────┘

    foo.py
       eqeq-bad
          useless comparison

            4┆ a == a
            ⋮┆----------------------------------------
            5┆ a == a
            ⋮┆----------------------------------------
            7┆ a == a
            ⋮┆----------------------------------------
           11┆ y == y


┌──────────────────────────────────┐
│ 1 Reachable Supply Chain Finding │
└──────────────────────────────────┘

    poetry.lock
       supply-chain1
          found a dependency

            1┆ [[package]]
            2┆ name = "badlib"

  BLOCKING CODE RULES FIRED:
    eqeq-bad


=== end of stdout - plain

=== stderr - plain


┌────────────────┐
│ Debugging Info │
└────────────────┘

  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown

  CONNECTION
  Reporting start of scan for deployment_name
  Fetching configuration from Semgrep Cloud Platform

┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 4 files tracked by git with 1 Code rule, 1 Supply Chain rule:


  CODE RULES
  Scanning 1 file.

  SUPPLY CHAIN RULES
  Scanning 1 file.


┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

CI scan completed successfully.
  Found 5 findings (5 blocking) from 2 rules.
'bool' object is not callable
Traceback (most recent call last):
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/wrapper.py", line 35, in wrapper
    func(*args, **kwargs)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/ci.py", line 499, in ci
    app_block_override, reason = scan_handler.report_findings(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/app/scans.py", line 288, in report_findings
    findings = [match.to_app_finding_format(commit_date) for match in new_matches]
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/app/scans.py", line 288, in <listcomp>
    findings = [match.to_app_finding_format(commit_date) for match in new_matches]
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/rule_match.py", line 565, in to_app_finding_format
    is_blocking=self.is_blocking,
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/rule_match.py", line 431, in is_blocking
    and self.is_reachable_or_always_reachable()
TypeError: 'bool' object is not callable

=== end of stderr - plain