=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors --emacs
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain
foo.py:4:5:error(eqeq-bad):    a == a:useless comparison
foo.py:5:5:error(eqeq-bad):    a == a:useless comparison
foo.py:7:5:error(eqeq-bad):    a == a:useless comparison
foo.py:11:5:error(eqeq-bad):    y == y:useless comparison
foo.py:15:5:error(eqeq-five):    x == 5:useless comparison to 5
foo.py:19:5:error(eqeq-four):    baz == 4:useless comparison to 4
foo.py:27:5:warning(taint-test):    sink(d2):unsafe use of danger
poetry.lock:1:0:error(supply-chain1):[[package]]:found a dependency

=== end of stdout - plain

=== stderr - plain


┌────────────────┐
│ Debugging Info │
└────────────────┘

  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown

  CONNECTION
  Reporting start of scan for deployment_name
  Fetching configuration from Semgrep Cloud Platform

┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 4 files tracked by git with 4 Code rules, 2 Supply Chain rules:


  CODE RULES
  Scanning 1 file with 4 python rules.

  SUPPLY CHAIN RULES
  Scanning 1 file.


┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

CI scan completed successfully.
  Found 8 findings (6 blocking) from 6 rules.
  Uploading findings.
'dict' object has no attribute 'to_json'
Traceback (most recent call last):
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/wrapper.py", line 35, in wrapper
    func(*args, **kwargs)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/ci.py", line 485, in ci
    app_block_override, reason = scan_handler.report_findings(
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/app/scans.py", line 310, in report_findings
    findings_and_ignores = api_scans_findings.to_json() + {
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_interfaces/semgrep_output_v1.py", line 3466, in to_json
    res['findings'] = _atd_write_list((lambda x: x.to_json()))(self.findings)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_interfaces/semgrep_output_v1.py", line 193, in write_list
    return [write_elt(elt) for elt in elts]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_interfaces/semgrep_output_v1.py", line 193, in <listcomp>
    return [write_elt(elt) for elt in elts]
            ^^^^^^^^^^^^^^
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_interfaces/semgrep_output_v1.py", line 3466, in <lambda>
    res['findings'] = _atd_write_list((lambda x: x.to_json()))(self.findings)
                                                 ^^^^^^^^^
AttributeError: 'dict' object has no attribute 'to_json'

=== end of stderr - plain