=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --sarif
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain
{
  "$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/os/schemas/sarif-schema-2.1.0.json",
  "runs": [
    {
      "invocations": [
        {
          "executionSuccessful": true,
          "toolExecutionNotifications": [
            {
              "descriptor": {
                "id": "Fatal error"
              },
              "level": "error",
              "message": {
                "text": "Fatal error at line :1:\n (Failure\n  \"No import definitions (given by the uses key) even though we are creating imports for the import definitions. This should be impossible\")\n====[ BEGIN error trace ]====\n(Failure\n  \"No import definitions (given by the uses key) even though we are creating imports for the import definitions. This should be impossible\")\nRaised at Stdlib.failwith in file \"stdlib.ml\", line 29, characters 17-33\nCalled from Parse_rule.create_imports in file \"src/parsing/Parse_rule.ml\", line 1156, characters 8-190\nCalled from Parse_rule.parse_templated_rules in file \"src/parsing/Parse_rule.ml\", line 1274, characters 32-61\nCalled from Parse_rule.parse_possibly_templated_rules in file \"src/parsing/Parse_rule.ml\", line 1336, characters 4-54\nCalled from Common.with_time in file \"src/pfff/commons/Common.ml\", line 215, characters 12-16\nCalled from Run_semgrep.semgrep_with_raw_results_and_exn_handler in file \"src/runner/Run_semgrep.ml\", line 665, characters 6-97\n=====[ END error trace ]=====\n"
              }
            }
          ]
        }
      ],
      "results": [],
      "tool": {
        "driver": {
          "name": "semgrep",
          "rules": [],
          "semanticVersion": "placeholder"
        }
      }
    }
  ],
  "version": "2.1.0"
}
=== end of stdout - plain

=== stderr - plain
Scan environment:
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown
  semgrep.dev - authenticated as org_name

Fetching configuration from semgrep.dev
Adding ignore patterns configured on semgrep.dev as `--exclude` options: ()
Fetching rules from https://semgrep.dev/registry.
Scanning 1 file with 4 python rules.

=== end of stderr - plain