=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors --sarif
=== end of command

=== exit code
7
=== end of exit code

=== stdout - plain
{
  "$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/os/schemas/sarif-schema-2.1.0.json",
  "runs": [
    {
      "invocations": [
        {
          "executionSuccessful": true,
          "toolExecutionNotifications": [
            {
              "descriptor": {
                "id": "SemgrepError"
              },
              "level": "error",
              "message": {
                "text": "Invalid YAML file semgrep-app-rules:\n\twhile constructing a mapping\n\t  in \"/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_interfaces/rule_schema_v1.yaml\", line 2, column 1\n\tfound duplicate key \"$comment\" with value \"!!If you add new syntax to this file, you probably need to add some EXPERIMENTAL comment before!!\" (original value: \"!!If you modify this file, you need to update the submodule in returntocorp/semgrep and returntocorp/semgrep-app!!\")\n\t  in \"/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_interfaces/rule_schema_v1.yaml\", line 5, column 1\n\t\n\tTo suppress this check see:\n\t    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys"
              }
            },
            {
              "descriptor": {
                "id": "SemgrepError"
              },
              "level": "error",
              "message": {
                "text": "invalid configuration file found (1 configs were invalid)"
              }
            }
          ]
        }
      ],
      "results": [],
      "tool": {
        "driver": {
          "name": "semgrep",
          "rules": [],
          "semanticVersion": "placeholder"
        }
      }
    }
  ],
  "version": "2.1.0"
}
=== end of stdout - plain

=== stderr - plain
Scan environment:
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown
  server      - https://semgrep.dev

Fetching configuration from semgrep.dev
Authenticated as org_name

=== end of stderr - plain