=== command
BUILD_BUILDID="some_id" SEMGREP_REPO_NAME="a/repo/name" SEMGREP_REPO_URL="https://random.url.org/some/path" SEMGREP_BRANCH="branch/some-other-branch-name" SEMGREP_JOB_URL="https://another.random.url.org/some/path" SEMGREP_COMMIT="<some_random_commit>" SEMGREP_PR_ID="34566" BUILD_REPOSITORY_URI="https://github.com/project_name/project_name.git" SYSTEM_PULLREQUEST_SOURCEBRANCH="some/branch-name" SYSTEM_TEAMFOUNDATIONSERVERURI="https://azure.pipeline.url/" SYSTEM_TEAMPROJECTID="project_id" SYSTEM_JOBID="job_id" SYSTEM_TASKINSTANCEID="task_id" SYSTEM_PULLREQUEST_SOURCECOMMITID="<MASKED>" SEMGREP_APP_TOKEN="fake-key-from-tests" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain

=== end of stdout - plain

=== stderr - plain
Scan environment:
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment azure-pipelines, triggering event is pull_request
  server      - https://semgrep.dev

Fetching configuration from semgrep.dev
Authenticated as org_name
Scanning 1 file with 4 python rules.
CoreMatchExtra.__init__() missing 1 required positional argument: 'engine_kind'
Traceback (most recent call last):
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/wrapper.py", line 35, in wrapper
    func(*args, **kwargs)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/ci.py", line 382, in ci
    ) = semgrep.semgrep_main.main(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_main.py", line 438, in main
    ) = run_rules(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_main.py", line 230, in run_rules
    ) = generate_unreachable_sca_findings(rule, target_manager, set())
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/dependency_aware_rule.py", line 97, in generate_unreachable_sca_findings
    extra=core.CoreMatchExtra(metavars=core.Metavars({})),
TypeError: CoreMatchExtra.__init__() missing 1 required positional argument: 'engine_kind'

=== end of stderr - plain