=== command
CI="true" GITHUB_ACTIONS="true" GITHUB_ACTOR="some_test_username" GITHUB_API_URL="https://api.github.com" GITHUB_REPOSITORY="project_name/project_name" GITHUB_RUN_ID="35" GITHUB_SERVER_URL="https://github.com" GITHUB_WORKSPACE="/home/runner/work/actions-test/actions-test" GITHUB_REPOSITORY_ID="4" GITHUB_REPOSITORY_OWNER_ID="2" GITHUB_EVENT_NAME="push" GITHUB_REF="refs/heads/some/branch-name" GITHUB_BASE_REF="" GITHUB_HEAD_REF="" SEMGREP_REPO_NAME="project_name/project_name" SEMGREP_JOB_URL="customjoburl.com" SEMGREP_PR_ID="312" SEMGREP_PR_TITLE="PR_TITLE" SEMGREP_BRANCH="some/branch-name" GITHUB_SHA="<MASKED>" SEMGREP_APP_TOKEN="fake-key-from-tests" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain


┌────────────────┐
│ Debugging Info │
└────────────────┘

  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment github-actions, triggering event is push

  CONNECTION
  Initializing scan (deployment=org_name, scan_id=12345)
  Enabled products: Code, Supply Chain

┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 4 files tracked by git with 4 Code rules, 3 Supply Chain rules:


  CODE RULES
  Scanning 1 file with 4 python rules.

  SUPPLY CHAIN RULES
  Scanning 1 file.
CoreMatchExtra.__init__() missing 1 required positional argument: 'is_ignored'
Traceback (most recent call last):
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/wrapper.py", line 37, in wrapper
    func(*args, **kwargs)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/ci.py", line 441, in ci
    ) = semgrep.run_scan.run_scan(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/run_scan.py", line 554, in run_scan
    ) = run_rules(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/run_scan.py", line 276, in run_rules
    ) = generate_unreachable_sca_findings(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/dependency_aware_rule.py", line 110, in generate_unreachable_sca_findings
    extra=out.CoreMatchExtra(
TypeError: CoreMatchExtra.__init__() missing 1 required positional argument: 'is_ignored'

=== end of stdout - plain

=== stderr - plain

=== end of stderr - plain