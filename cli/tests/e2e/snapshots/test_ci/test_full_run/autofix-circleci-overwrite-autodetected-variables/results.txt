=== command
CI="true" SEMGREP_REPO_NAME="a/repo/name" SEMGREP_REPO_URL="https://random.url.org/some/path" SEMGREP_BRANCH="branch/some-other-branch-name" SEMGREP_JOB_URL="https://another.random.url.org/some/path" SEMGREP_COMMIT="<some_random_commit>" SEMGREP_PR_ID="99999" CIRCLECI="true" CIRCLE_PROJECT_USERNAME="project_name" CIRCLE_PROJECT_REPONAME="project_name" CIRCLE_REPOSITORY_URL="git@github.com/project_name/project_name.git" CIRCLE_BRANCH="some/branch-name" CIRCLE_BUILD_URL="https://circle.ci.build.url" CIRCLE_PULL_REQUEST="https://github.com/project_name/project_name/pull/35" CIRCLE_SHA1="<MASKED>" SEMGREP_APP_TOKEN="fake-key-from-tests" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain

=== end of stdout - plain

=== stderr - plain
                  
                  
┌────────────────┐
│ Debugging Info │
└────────────────┘
                  
  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment circleci, triggering event is            
                pull_request                                                    
            
  CONNECTION
  Reporting start of scan for deployment_name         
  Fetching configuration from Semgrep Cloud Platform                 
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 4 files tracked by git with 4 Code rules, 2 Supply Chain rules:
            
            
  CODE RULES
  Scanning 1 file with 4 python rules.
                    
  SUPPLY CHAIN RULES
  Scanning 1 file.
This rule contains an unexpected scan source in the metadata: eqeq-bad
Traceback (most recent call last):
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/wrapper.py", line 35, in wrapper
    func(*args, **kwargs)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/ci.py", line 464, in ci
    if rule.scan_source == RuleScanSource.previous_scan:
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/rule.py", line 270, in scan_source
    raise ValueError(f"This rule contains an unexpected scan source in the metadata: {self.id}")
ValueError: This rule contains an unexpected scan source in the metadata: eqeq-bad

=== end of stderr - plain