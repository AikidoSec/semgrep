=== command
CI="true" GITHUB_ACTIONS="true" GITHUB_EVENT_NAME="pull_request" GITHUB_REPOSITORY="project_name/project_name" GITHUB_RUN_ID="35" GITHUB_ACTOR="some_test_username" GITHUB_REF="some/branch-name" GITHUB_SHA="<MASKED>" GITHUB_EVENT_PATH="<MASKED>" SEMGREP_APP_TOKEN="fake-key-from-tests" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain


┌────────────────┐
│ Debugging Info │
└────────────────┘

  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment github-actions, triggering event is
                pull_request
Fixing git state for github action pull request
Not on head ref: <MASKED>; checking that out now.

  CONNECTION
Using <MASKED> as the merge-base of <MASKED> and <MASKED>
  Reporting start of scan for deployment_name
  Fetching configuration from Semgrep Cloud Platform

┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 4 Code rules:
  Scanning 1 file with 4 python rules.
  Current version has 14 findings.

Creating git worktree from '<MASKED>' to scan baseline.
  Will report findings introduced by these commits (may be incomplete for shallow checkouts):
    * <MASKED> Some other commit/ message



┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 4 Code rules:
  Scanning 1 file with 4 python rules.
'Rule' object has no attribute 'from_transient_scan'
Traceback (most recent call last):
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/wrapper.py", line 35, in wrapper
    func(*args, **kwargs)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/ci.py", line 416, in ci
    transient_scan_rules = [rule for rule in filtered_rules if rule.from_transient_scan]
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/ci.py", line 416, in <listcomp>
    transient_scan_rules = [rule for rule in filtered_rules if rule.from_transient_scan]
AttributeError: 'Rule' object has no attribute 'from_transient_scan'

=== end of stdout - plain

=== stderr - plain

=== end of stderr - plain