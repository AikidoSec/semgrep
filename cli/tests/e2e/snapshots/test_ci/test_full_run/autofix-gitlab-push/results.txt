=== command
CI="true" GITLAB_CI="true" CI_PROJECT_PATH="project_name/project_name" CI_PIPELINE_SOURCE="push" CI_JOB_TOKEN="some-token-test-placeholder" CI_COMMIT_REF_NAME="some/branch-name" CI_COMMIT_SHA="<MASKED>" CI_PROJECT_URL="https://example.com/gitlab-org/gitlab-foss" CI_JOB_URL="https://gitlab.com/gitlab-examples/ci-debug-trace/-/jobs/379424655" SEMGREP_APP_TOKEN="fake-key-from-tests" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain

=== end of stdout - plain

=== stderr - plain
Scan environment:
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment gitlab-ci, triggering event is push
  server      - https://semgrep.dev

Fetching configuration from semgrep.dev
Authenticated as org_name
Scanning 1 file with 4 python rules.
CoreMatchExtra.__init__() missing 1 required positional argument: 'engine_kind'
Traceback (most recent call last):
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/wrapper.py", line 35, in wrapper
    func(*args, **kwargs)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/ci.py", line 382, in ci
    ) = semgrep.semgrep_main.main(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_main.py", line 438, in main
    ) = run_rules(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_main.py", line 230, in run_rules
    ) = generate_unreachable_sca_findings(rule, target_manager, set())
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/dependency_aware_rule.py", line 97, in generate_unreachable_sca_findings
    extra=core.CoreMatchExtra(metavars=core.Metavars({})),
TypeError: CoreMatchExtra.__init__() missing 1 required positional argument: 'engine_kind'

=== end of stderr - plain