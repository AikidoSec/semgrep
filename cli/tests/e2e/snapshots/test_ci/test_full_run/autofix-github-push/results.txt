=== command
CI="true" GITHUB_ACTIONS="true" GITHUB_EVENT_NAME="push" GITHUB_REPOSITORY="project_name/project_name" GITHUB_RUN_ID="35" GITHUB_ACTOR="some_test_username" GITHUB_REF="some/branch-name" GITHUB_SERVER_URL="https://github.com" GITHUB_SHA="<MASKED>" SEMGREP_APP_TOKEN="fake-key-from-tests" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain
                  
                  
┌────────────────┐
│ Debugging Info │
└────────────────┘
                  
  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment github-actions, triggering event is push
            
  CONNECTION
  Fetching configuration from Semgrep Cloud Platform  
  Reporting start of scan for org_name                               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 4 files tracked by git with 4 Code rules, 2 Supply Chain rules:
            
  CODE RULES
  Scanning 1 file with 4 python rules.
                    
  SUPPLY CHAIN RULES
  Scanning 1 file.
           
           
┌─────────┐
│ Results │
└─────────┘
Semgrep Supply Chain Summary: 0 Reachable findings, 1 Unreachable finding


Unreachable Supply Chain Findings:

  poetry.lock 
     supply-chain1
        found a dependency


First-Party Non-Blocking Findings:

  foo.py 
     eqeq-five
        useless comparison to 5

         ▶▶┆ Autofix ▶ (x == 2)
         15┆ (x == 2)

First-Party Blocking Findings:

  foo.py 
     eqeq-bad
        useless comparison

          4┆ a == a
          ⋮┆----------------------------------------
          5┆ a == a
          ⋮┆----------------------------------------
          7┆ a == a
          ⋮┆----------------------------------------
         11┆ y == y
          ⋮┆----------------------------------------
     eqeq-four
        useless comparison to 4

         19┆ baz == 4
          ⋮┆----------------------------------------
     taint-test
        unsafe use of danger

         27┆ sink(d2)

First-Party Blocking Rules Fired:
   eqeq-bad   
   eqeq-four   
   taint-test
                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

CI scan completed successfully.
  Found 8 findings (6 blocking) from 6 rules.
  Uploading findings.
'CoreMatchDataflowTrace' object has no attribute 'taint_source'
Traceback (most recent call last):
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/wrapper.py", line 35, in wrapper
    func(*args, **kwargs)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/ci.py", line 473, in ci
    scan_handler.report_findings(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/app/scans.py", line 274, in report_findings
    findings = [
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/app/scans.py", line 275, in <listcomp>
    match.to_app_finding_format(commit_date).to_json() for match in new_matches
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/rule_match.py", line 487, in to_app_finding_format
    dataflow_trace=self.dataflow_trace,
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/rule_match.py", line 397, in dataflow_trace
    if dataflow_trace.taint_source:
AttributeError: 'CoreMatchDataflowTrace' object has no attribute 'taint_source'. Did you mean: 'taint_sources'?

=== end of stdout - plain

=== stderr - plain

=== end of stderr - plain