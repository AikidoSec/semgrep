=== command
CI="true" GITLAB_CI="true" SEMGREP_REPO_NAME="project_name/project_name" CI_PIPELINE_SOURCE="merge_request_event" CI_MERGE_REQUEST_TARGET_BRANCH_NAME="main" CI_MERGE_REQUEST_PROJECT_URL="https://some.project.url.test.placeholder" CI_JOB_TOKEN="some-token-test-placeholder" CI_COMMIT_REF_NAME="some/branch-name" SEMGREP_COMMIT="unused-commit-test-placeholder" SEMGREP_REPO_URL="https://example.com/gitlab-org/gitlab-foss" SEMGREP_JOB_URL="https://gitlab.com/gitlab-examples/ci-debug-trace/-/jobs/379424655" SEMGREP_PR_ID="unused-iid-test-placeholder" CI_MERGE_REQUEST_DIFF_BASE_SHA="unused-commit-test-placeholder" SEMGREP_PR_TITLE="unused-merge-request-title-test-placeholder" CI_COMMIT_SHA="<MASKED>" SEMGREP_APP_TOKEN="fake-key-from-tests" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors
=== end of command

=== exit code
2
=== end of exit code

=== stdout - plain

=== end of stdout - plain

=== stderr - plain
                  
                  
┌────────────────┐
│ Debugging Info │
└────────────────┘
                  
  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment gitlab-ci, triggering event is           
                pull_request                                                    
            
  CONNECTION
  Reporting start of scan for deployment_name         
  Fetching configuration from Semgrep Cloud Platform                 
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 4 Code rules:
  Scanning 1 file with 4 python rules.
  Current version has 14 findings.

Switching repository to baseline commit '<MASKED>'.
  Will report findings introduced by these commits (may be incomplete for shallow checkouts):
    * <MASKED> Some other commit/ message

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 4 Code rules:
  Scanning 1 file with 4 python rules.
This rule contains an unexpected scan source in the metadata: eqeq-bad
Traceback (most recent call last):
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/wrapper.py", line 35, in wrapper
    func(*args, **kwargs)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/ci.py", line 464, in ci
    if rule.scan_source == RuleScanSource.previous_scan:
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/rule.py", line 270, in scan_source
    raise ValueError(f"This rule contains an unexpected scan source in the metadata: {self.id}")
ValueError: This rule contains an unexpected scan source in the metadata: eqeq-bad

=== end of stderr - plain