METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

Fetching rules from https://semgrep.dev/registry.
local variable 'config_url' referenced before assignment
Traceback (most recent call last):
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/wrapper.py", line 35, in wrapper
    func(*args, **kwargs)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/commands/scan.py", line 815, in scan
    ) = semgrep.semgrep_main.main(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/semgrep_main.py", line 304, in main
    configs_obj, config_errors = get_config(
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/config_resolver.py", line 630, in get_config
    config, errors = Config.from_config_list(config_strs, project_url)
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/config_resolver.py", line 266, in from_config_list
    resolved_config = ConfigPath(config, project_url).resolve_config()
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/config_resolver.py", line 133, in resolve_config
    config = self._download_config()
  File "/home/runner/work/semgrep/semgrep/cli/src/semgrep/config_resolver.py", line 158, in _download_config
    self._config_path if is_rules(config_url) else self._make_config_request()
UnboundLocalError: local variable 'config_url' referenced before assignment
