[{"name": "semgrep.bench.simple-mvc-app", "findings": {"errors": [], "results": [{"check_id": "semgrep.perf.bench.rules_cache.simple-mvc-app.tainted-sql-string", "end": {"col": 77, "line": 73, "offset": 2538}, "extra": {"dataflow_trace": {"taint_sink": ["CliCall", [[{"end": {"col": 23, "line": 45, "offset": 1260}, "path": "/Users/emma/workspace/semgrep-proprietary/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/controllers/PeopleController.java", "start": {"col": 9, "line": 45, "offset": 1246}}, "personDAO.save"], [{"content": "person", "location": {"end": {"col": 35, "line": 62, "offset": 1826}, "path": "/Users/emma/workspace/semgrep-proprietary/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/dao/PersonDAO.java", "start": {"col": 29, "line": 62, "offset": 1820}}}], ["CliLoc", [{"end": {"col": 77, "line": 73, "offset": 2538}, "path": "/Users/emma/workspace/semgrep-proprietary/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/dao/PersonDAO.java", "start": {"col": 26, "line": 72, "offset": 2400}}, "\"INSERT INTO PERSON VALUES (\" + 1 + \",'\" + person.getName() +\n                    \"',\" + person.getAge() + \",'\" + person.getEmail() + \"')\""]]]], "taint_source": ["CliLoc", [{"end": {"col": 30, "line": 45, "offset": 1267}, "path": "/Users/emma/workspace/semgrep-proprietary/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/controllers/PeopleController.java", "start": {"col": 24, "line": 45, "offset": 1261}}, "person"]]}, "engine_kind": "PRO", "fingerprint": "<masked in benchmarks>", "is_ignored": false, "lines": "<masked in benchmarks>", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"interfile": true}, "metavars": "<masked in benchmarks>", "severity": "ERROR"}, "path": "<masked in benchmarks>/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/dao/PersonDAO.java", "start": {"col": 26, "line": 72, "offset": 2400}}, {"check_id": "semgrep.perf.bench.rules_cache.simple-mvc-app.formatted-sql-string", "end": {"col": 41, "line": 74, "offset": 2580}, "extra": {"dataflow_trace": {"taint_sink": ["CliCall", [[{"end": {"col": 23, "line": 45, "offset": 1260}, "path": "/Users/emma/workspace/semgrep-proprietary/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/controllers/PeopleController.java", "start": {"col": 9, "line": 45, "offset": 1246}}, "personDAO.save"], [{"content": "person", "location": {"end": {"col": 35, "line": 62, "offset": 1826}, "path": "/Users/emma/workspace/semgrep-proprietary/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/dao/PersonDAO.java", "start": {"col": 29, "line": 62, "offset": 1820}}}, {"content": "sql", "location": {"end": {"col": 23, "line": 72, "offset": 2397}, "path": "/Users/emma/workspace/semgrep-proprietary/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/dao/PersonDAO.java", "start": {"col": 20, "line": 72, "offset": 2394}}}], ["CliLoc", [{"end": {"col": 41, "line": 74, "offset": 2580}, "path": "/Users/emma/workspace/semgrep-proprietary/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/dao/PersonDAO.java", "start": {"col": 13, "line": 74, "offset": 2552}}, "statement.executeUpdate(sql)"]]]], "taint_source": ["CliLoc", [{"end": {"col": 30, "line": 45, "offset": 1267}, "path": "/Users/emma/workspace/semgrep-proprietary/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/controllers/PeopleController.java", "start": {"col": 24, "line": 45, "offset": 1261}}, "person"]]}, "engine_kind": "PRO", "fingerprint": "<masked in benchmarks>", "is_ignored": false, "lines": "<masked in benchmarks>", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"interfile": true}, "metavars": "<masked in benchmarks>", "severity": "ERROR"}, "path": "<masked in benchmarks>/semgrep/perf/bench/simple-mvc-app/input/simple-mvc-app.git/src/main/java/ru/mcs/mvc/app/dao/PersonDAO.java", "start": {"col": 13, "line": 74, "offset": 2552}}]}}]